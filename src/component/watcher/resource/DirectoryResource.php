<?php
/**
 * Created by PhpStorm.
 * User: yuyc
 * Date: 2017/6/3
 * Time: 15:14
 */

namespace base\component\watcher\resource;

use base\component\watcher\resource\FileResource;
use base\component\watcher\resource\ResourceInterface;

class DirectoryResource extends FileResource implements ResourceInterface {

    /**
     * 当前目录的子目录数组
     * @var array
     */
    protected $descendants = [];

    public function setupDirectory() {
        $this->descendants = $this->detectDirectoryDescendants();
    }

    public function detectChanges() {
        parent::detectChanges(); // TODO: Change the autogenerated stub
    }

    /**
     * 检查目录的子目录
     */
    protected function detectDirectoryDescendants() {
        $descendants = [];
        $iterator = new \RecursiveIteratorIterator(new \RecursiveDirectoryIterator($this->getPath()));

        foreach ($iterator as $key => $splFile) {
            if ($splFile->isDir() && ! in_array($splFile->getBasename(), ['.', '..'])) {
                $resource = new DirectoryResource($splFile);
                $descendants[$resource->getKey()] = $resource;
            } else {
                $ext = $splFile->getExtension();
                if (in_array($ext, ['php', 'ini'])) {
                    $resource = new FileResource($splFile);
                    $descendants[$resource->getKey()] = $resource;
                }
            }
        }

        return $descendants;
    }

    public function getDescendants() {
        return $this->descendants;
    }
}